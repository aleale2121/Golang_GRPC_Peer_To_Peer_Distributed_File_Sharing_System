// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: song.proto

package song

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Artist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FirstName string               `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName  string               `protobuf:"bytes,3,opt,name=LastName,proto3" json:"LastName,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Artist) Reset() {
	*x = Artist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artist) ProtoMessage() {}

func (x *Artist) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artist.ProtoReflect.Descriptor instead.
func (*Artist) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{0}
}

func (x *Artist) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Artist) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Artist) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Artist) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Artist) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Song struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ArtistId      string               `protobuf:"bytes,2,opt,name=ArtistId,proto3" json:"ArtistId,omitempty"`
	Artist        *Artist              `protobuf:"bytes,3,opt,name=Artist,proto3" json:"Artist,omitempty"`
	Title         string               `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	CoverImageUrl string               `protobuf:"bytes,5,opt,name=CoverImageUrl,proto3" json:"CoverImageUrl,omitempty"`
	SongUrl       string               `protobuf:"bytes,6,opt,name=SongUrl,proto3" json:"SongUrl,omitempty"`
	Views         int64                `protobuf:"varint,7,opt,name=Views,proto3" json:"Views,omitempty"`
	Duration      int64                `protobuf:"varint,8,opt,name=Duration,proto3" json:"Duration,omitempty"`
	ReleasedAt    *timestamp.Timestamp `protobuf:"bytes,9,opt,name=ReleasedAt,proto3" json:"ReleasedAt,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,10,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt     *timestamp.Timestamp `protobuf:"bytes,11,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Song) Reset() {
	*x = Song{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{1}
}

func (x *Song) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Song) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

func (x *Song) GetArtist() *Artist {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *Song) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Song) GetCoverImageUrl() string {
	if x != nil {
		return x.CoverImageUrl
	}
	return ""
}

func (x *Song) GetSongUrl() string {
	if x != nil {
		return x.SongUrl
	}
	return ""
}

func (x *Song) GetViews() int64 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *Song) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Song) GetReleasedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ReleasedAt
	}
	return nil
}

func (x *Song) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Song) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DownloadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=FileId,proto3" json:"FileId,omitempty"`
}

func (x *DownloadFileRequest) Reset() {
	*x = DownloadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequest) ProtoMessage() {}

func (x *DownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadFileRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type DownloadFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkData []byte `protobuf:"bytes,1,opt,name=chunk_data,json=chunkData,proto3" json:"chunk_data,omitempty"`
}

func (x *DownloadFileResponse) Reset() {
	*x = DownloadFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileResponse) ProtoMessage() {}

func (x *DownloadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileResponse.ProtoReflect.Descriptor instead.
func (*DownloadFileResponse) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadFileResponse) GetChunkData() []byte {
	if x != nil {
		return x.ChunkData
	}
	return nil
}

type SongCreateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtistId string `protobuf:"bytes,1,opt,name=ArtistId,proto3" json:"ArtistId,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Duration int64  `protobuf:"varint,3,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *SongCreateInfo) Reset() {
	*x = SongCreateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SongCreateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongCreateInfo) ProtoMessage() {}

func (x *SongCreateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongCreateInfo.ProtoReflect.Descriptor instead.
func (*SongCreateInfo) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{4}
}

func (x *SongCreateInfo) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

func (x *SongCreateInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SongCreateInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type CreateSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*CreateSongRequest_SongInfo
	//	*CreateSongRequest_SongCover_ImageChunkData
	Data isCreateSongRequest_Data `protobuf_oneof:"data"`
}

func (x *CreateSongRequest) Reset() {
	*x = CreateSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSongRequest) ProtoMessage() {}

func (x *CreateSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSongRequest.ProtoReflect.Descriptor instead.
func (*CreateSongRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{5}
}

func (m *CreateSongRequest) GetData() isCreateSongRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *CreateSongRequest) GetSongInfo() *SongCreateInfo {
	if x, ok := x.GetData().(*CreateSongRequest_SongInfo); ok {
		return x.SongInfo
	}
	return nil
}

func (x *CreateSongRequest) GetSongCover_ImageChunkData() []byte {
	if x, ok := x.GetData().(*CreateSongRequest_SongCover_ImageChunkData); ok {
		return x.SongCover_ImageChunkData
	}
	return nil
}

type isCreateSongRequest_Data interface {
	isCreateSongRequest_Data()
}

type CreateSongRequest_SongInfo struct {
	SongInfo *SongCreateInfo `protobuf:"bytes,1,opt,name=songInfo,proto3,oneof"`
}

type CreateSongRequest_SongCover_ImageChunkData struct {
	SongCover_ImageChunkData []byte `protobuf:"bytes,2,opt,name=song_cover_Image_chunk_data,json=songCoverImageChunkData,proto3,oneof"`
}

func (*CreateSongRequest_SongInfo) isCreateSongRequest_Data() {}

func (*CreateSongRequest_SongCover_ImageChunkData) isCreateSongRequest_Data() {}

type CreateSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateSongResponse) Reset() {
	*x = CreateSongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSongResponse) ProtoMessage() {}

func (x *CreateSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSongResponse.ProtoReflect.Descriptor instead.
func (*CreateSongResponse) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{6}
}

func (x *CreateSongResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateSongUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*UpdateSongUrlRequest_SongId
	//	*UpdateSongUrlRequest_SongChunkData
	Data isUpdateSongUrlRequest_Data `protobuf_oneof:"data"`
}

func (x *UpdateSongUrlRequest) Reset() {
	*x = UpdateSongUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSongUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSongUrlRequest) ProtoMessage() {}

func (x *UpdateSongUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSongUrlRequest.ProtoReflect.Descriptor instead.
func (*UpdateSongUrlRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{7}
}

func (m *UpdateSongUrlRequest) GetData() isUpdateSongUrlRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UpdateSongUrlRequest) GetSongId() string {
	if x, ok := x.GetData().(*UpdateSongUrlRequest_SongId); ok {
		return x.SongId
	}
	return ""
}

func (x *UpdateSongUrlRequest) GetSongChunkData() []byte {
	if x, ok := x.GetData().(*UpdateSongUrlRequest_SongChunkData); ok {
		return x.SongChunkData
	}
	return nil
}

type isUpdateSongUrlRequest_Data interface {
	isUpdateSongUrlRequest_Data()
}

type UpdateSongUrlRequest_SongId struct {
	SongId string `protobuf:"bytes,1,opt,name=song_id,json=songId,proto3,oneof"`
}

type UpdateSongUrlRequest_SongChunkData struct {
	SongChunkData []byte `protobuf:"bytes,2,opt,name=song_chunk_data,json=songChunkData,proto3,oneof"`
}

func (*UpdateSongUrlRequest_SongId) isUpdateSongUrlRequest_Data() {}

func (*UpdateSongUrlRequest_SongChunkData) isUpdateSongUrlRequest_Data() {}

type UpdateSongUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSongUrlResponse) Reset() {
	*x = UpdateSongUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSongUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSongUrlResponse) ProtoMessage() {}

func (x *UpdateSongUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSongUrlResponse.ProtoReflect.Descriptor instead.
func (*UpdateSongUrlResponse) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{8}
}

type GetSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongId string `protobuf:"bytes,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
}

func (x *GetSongRequest) Reset() {
	*x = GetSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongRequest) ProtoMessage() {}

func (x *GetSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongRequest.ProtoReflect.Descriptor instead.
func (*GetSongRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{9}
}

func (x *GetSongRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

type GetSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Song *Song `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"`
}

func (x *GetSongResponse) Reset() {
	*x = GetSongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongResponse) ProtoMessage() {}

func (x *GetSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongResponse.ProtoReflect.Descriptor instead.
func (*GetSongResponse) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{10}
}

func (x *GetSongResponse) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

type GetSongsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64  `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	MaxPerPage int64  `protobuf:"varint,2,opt,name=maxPerPage,proto3" json:"maxPerPage,omitempty"`
	Sort       string `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	SortKey    string `protobuf:"bytes,4,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *GetSongsRequest) Reset() {
	*x = GetSongsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongsRequest) ProtoMessage() {}

func (x *GetSongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongsRequest.ProtoReflect.Descriptor instead.
func (*GetSongsRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{11}
}

func (x *GetSongsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSongsRequest) GetMaxPerPage() int64 {
	if x != nil {
		return x.MaxPerPage
	}
	return 0
}

func (x *GetSongsRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetSongsRequest) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type GetSongsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Songs *PaginatedSongData `protobuf:"bytes,1,opt,name=songs,proto3" json:"songs,omitempty"`
}

func (x *GetSongsResponse) Reset() {
	*x = GetSongsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSongsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongsResponse) ProtoMessage() {}

func (x *GetSongsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongsResponse.ProtoReflect.Descriptor instead.
func (*GetSongsResponse) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{12}
}

func (x *GetSongsResponse) GetSongs() *PaginatedSongData {
	if x != nil {
		return x.Songs
	}
	return nil
}

type UpdateSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Song *Song `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"`
}

func (x *UpdateSongRequest) Reset() {
	*x = UpdateSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSongRequest) ProtoMessage() {}

func (x *UpdateSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSongRequest.ProtoReflect.Descriptor instead.
func (*UpdateSongRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateSongRequest) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

type UpdateSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSongResponse) Reset() {
	*x = UpdateSongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSongResponse) ProtoMessage() {}

func (x *UpdateSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSongResponse.ProtoReflect.Descriptor instead.
func (*UpdateSongResponse) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{14}
}

type DeleteSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSongRequest) Reset() {
	*x = DeleteSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSongRequest) ProtoMessage() {}

func (x *DeleteSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSongRequest.ProtoReflect.Descriptor instead.
func (*DeleteSongRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteSongRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSongResponse) Reset() {
	*x = DeleteSongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSongResponse) ProtoMessage() {}

func (x *DeleteSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSongResponse.ProtoReflect.Descriptor instead.
func (*DeleteSongResponse) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{16}
}

type GetArtistSongsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtistId   string `protobuf:"bytes,1,opt,name=artistId,proto3" json:"artistId,omitempty"`
	Page       int64  `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	MaxPerPage int64  `protobuf:"varint,3,opt,name=maxPerPage,proto3" json:"maxPerPage,omitempty"`
	Sort       string `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	SortKey    string `protobuf:"bytes,5,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
}

func (x *GetArtistSongsRequest) Reset() {
	*x = GetArtistSongsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtistSongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtistSongsRequest) ProtoMessage() {}

func (x *GetArtistSongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtistSongsRequest.ProtoReflect.Descriptor instead.
func (*GetArtistSongsRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{17}
}

func (x *GetArtistSongsRequest) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

func (x *GetArtistSongsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetArtistSongsRequest) GetMaxPerPage() int64 {
	if x != nil {
		return x.MaxPerPage
	}
	return 0
}

func (x *GetArtistSongsRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetArtistSongsRequest) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type LikeSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SongId string `protobuf:"bytes,2,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
}

func (x *LikeSongRequest) Reset() {
	*x = LikeSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeSongRequest) ProtoMessage() {}

func (x *LikeSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeSongRequest.ProtoReflect.Descriptor instead.
func (*LikeSongRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{18}
}

func (x *LikeSongRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LikeSongRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

type LikeSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLiked bool `protobuf:"varint,1,opt,name=is_liked,json=isLiked,proto3" json:"is_liked,omitempty"`
}

func (x *LikeSongResponse) Reset() {
	*x = LikeSongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeSongResponse) ProtoMessage() {}

func (x *LikeSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeSongResponse.ProtoReflect.Descriptor instead.
func (*LikeSongResponse) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{19}
}

func (x *LikeSongResponse) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

type GetViewsCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongId string `protobuf:"bytes,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
}

func (x *GetViewsCountRequest) Reset() {
	*x = GetViewsCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetViewsCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViewsCountRequest) ProtoMessage() {}

func (x *GetViewsCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViewsCountRequest.ProtoReflect.Descriptor instead.
func (*GetViewsCountRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{20}
}

func (x *GetViewsCountRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

type GetViewsCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetViewsCountResponse) Reset() {
	*x = GetViewsCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetViewsCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViewsCountResponse) ProtoMessage() {}

func (x *GetViewsCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViewsCountResponse.ProtoReflect.Descriptor instead.
func (*GetViewsCountResponse) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{21}
}

func (x *GetViewsCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type IncreaseSongViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongId string `protobuf:"bytes,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
}

func (x *IncreaseSongViewRequest) Reset() {
	*x = IncreaseSongViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncreaseSongViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreaseSongViewRequest) ProtoMessage() {}

func (x *IncreaseSongViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreaseSongViewRequest.ProtoReflect.Descriptor instead.
func (*IncreaseSongViewRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{22}
}

func (x *IncreaseSongViewRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

type IncreaseSongViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IncreaseSongViewResponse) Reset() {
	*x = IncreaseSongViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncreaseSongViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreaseSongViewResponse) ProtoMessage() {}

func (x *IncreaseSongViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreaseSongViewResponse.ProtoReflect.Descriptor instead.
func (*IncreaseSongViewResponse) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{23}
}

type GetLikesCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongId string `protobuf:"bytes,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
}

func (x *GetLikesCountRequest) Reset() {
	*x = GetLikesCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikesCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikesCountRequest) ProtoMessage() {}

func (x *GetLikesCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikesCountRequest.ProtoReflect.Descriptor instead.
func (*GetLikesCountRequest) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{24}
}

func (x *GetLikesCountRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

type GetLikesCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetLikesCountResponse) Reset() {
	*x = GetLikesCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikesCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikesCountResponse) ProtoMessage() {}

func (x *GetLikesCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikesCountResponse.ProtoReflect.Descriptor instead.
func (*GetLikesCountResponse) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{25}
}

func (x *GetLikesCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PaginatedSongData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaData *SongMetaData `protobuf:"bytes,1,opt,name=MetaData,proto3" json:"MetaData,omitempty"`
	Data     []*Song       `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *PaginatedSongData) Reset() {
	*x = PaginatedSongData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginatedSongData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedSongData) ProtoMessage() {}

func (x *PaginatedSongData) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedSongData.ProtoReflect.Descriptor instead.
func (*PaginatedSongData) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{26}
}

func (x *PaginatedSongData) GetMetaData() *SongMetaData {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *PaginatedSongData) GetData() []*Song {
	if x != nil {
		return x.Data
	}
	return nil
}

type SongMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64       `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	PerPage    int64       `protobuf:"varint,2,opt,name=PerPage,proto3" json:"PerPage,omitempty"`
	PageCount  int64       `protobuf:"varint,3,opt,name=PageCount,proto3" json:"PageCount,omitempty"`
	TotalCount int64       `protobuf:"varint,4,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	Links      []*SongLink `protobuf:"bytes,5,rep,name=Links,proto3" json:"Links,omitempty"`
}

func (x *SongMetaData) Reset() {
	*x = SongMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SongMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongMetaData) ProtoMessage() {}

func (x *SongMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongMetaData.ProtoReflect.Descriptor instead.
func (*SongMetaData) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{27}
}

func (x *SongMetaData) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SongMetaData) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *SongMetaData) GetPageCount() int64 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *SongMetaData) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SongMetaData) GetLinks() []*SongLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type SongLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SongLink) Reset() {
	*x = SongLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_song_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SongLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongLink) ProtoMessage() {}

func (x *SongLink) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongLink.ProtoReflect.Descriptor instead.
func (*SongLink) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{28}
}

func (x *SongLink) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SongLink) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_song_proto protoreflect.FileDescriptor

var file_song_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x6f,
	0x6e, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x01, 0x0a, 0x06, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x90, 0x03, 0x0a,
	0x04, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x06, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52,
	0x06, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x6f, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x56, 0x69, 0x65, 0x77, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x69,
	0x65, 0x77, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3a, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x2d, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x35,
	0x0a, 0x14, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x0e, 0x53, 0x6f, 0x6e, 0x67, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x73,
	0x6f, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3e, 0x0a, 0x1b, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x17, 0x73, 0x6f, 0x6e, 0x67, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x24, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x6f, 0x6e,
	0x67, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x73, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53,
	0x6f, 0x6e, 0x67, 0x52, 0x04, 0x73, 0x6f, 0x6e, 0x67, 0x22, 0x73, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x41,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x6f, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x73, 0x6f, 0x6e, 0x67,
	0x73, 0x22, 0x33, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x73, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x6e, 0x67,
	0x52, 0x04, 0x73, 0x6f, 0x6e, 0x67, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22,
	0x43, 0x0a, 0x0f, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x6e, 0x67, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x10, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x6f, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c,
	0x69, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x69,
	0x6b, 0x65, 0x64, 0x22, 0x2f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x6e, 0x67, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x17, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x53,
	0x6f, 0x6e, 0x67, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x6e, 0x67, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x11, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x6f, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6f, 0x6e,
	0x67, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x6f,
	0x6e, 0x67, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa0, 0x01, 0x0a, 0x0c, 0x53, 0x6f, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x6e, 0x67,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x32, 0x0a, 0x08, 0x53,
	0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32,
	0xd2, 0x06, 0x0a, 0x0b, 0x53, 0x6f, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x41, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x17, 0x2e,
	0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x12, 0x4a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67,
	0x55, 0x72, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x6f, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e,
	0x67, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x36,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x14, 0x2e, 0x73, 0x6f, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x53, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x15, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73,
	0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x73, 0x6f, 0x6e, 0x67,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x73, 0x6f, 0x6e,
	0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x08, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x15, 0x2e, 0x73, 0x6f, 0x6e, 0x67,
	0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x6f, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53,
	0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x2e,
	0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x6f, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6e,
	0x67, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x6f, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x15, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x53,
	0x6f, 0x6e, 0x67, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x73,
	0x6f, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x53, 0x6f, 0x6e, 0x67,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x6f,
	0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x6f,
	0x6e, 0x67, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x3b, 0x73, 0x6f, 0x6e, 0x67, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_song_proto_rawDescOnce sync.Once
	file_song_proto_rawDescData = file_song_proto_rawDesc
)

func file_song_proto_rawDescGZIP() []byte {
	file_song_proto_rawDescOnce.Do(func() {
		file_song_proto_rawDescData = protoimpl.X.CompressGZIP(file_song_proto_rawDescData)
	})
	return file_song_proto_rawDescData
}

var file_song_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_song_proto_goTypes = []interface{}{
	(*Artist)(nil),                   // 0: song.Artist
	(*Song)(nil),                     // 1: song.Song
	(*DownloadFileRequest)(nil),      // 2: song.DownloadFileRequest
	(*DownloadFileResponse)(nil),     // 3: song.DownloadFileResponse
	(*SongCreateInfo)(nil),           // 4: song.SongCreateInfo
	(*CreateSongRequest)(nil),        // 5: song.CreateSongRequest
	(*CreateSongResponse)(nil),       // 6: song.CreateSongResponse
	(*UpdateSongUrlRequest)(nil),     // 7: song.UpdateSongUrlRequest
	(*UpdateSongUrlResponse)(nil),    // 8: song.UpdateSongUrlResponse
	(*GetSongRequest)(nil),           // 9: song.GetSongRequest
	(*GetSongResponse)(nil),          // 10: song.GetSongResponse
	(*GetSongsRequest)(nil),          // 11: song.GetSongsRequest
	(*GetSongsResponse)(nil),         // 12: song.GetSongsResponse
	(*UpdateSongRequest)(nil),        // 13: song.UpdateSongRequest
	(*UpdateSongResponse)(nil),       // 14: song.UpdateSongResponse
	(*DeleteSongRequest)(nil),        // 15: song.DeleteSongRequest
	(*DeleteSongResponse)(nil),       // 16: song.DeleteSongResponse
	(*GetArtistSongsRequest)(nil),    // 17: song.GetArtistSongsRequest
	(*LikeSongRequest)(nil),          // 18: song.LikeSongRequest
	(*LikeSongResponse)(nil),         // 19: song.LikeSongResponse
	(*GetViewsCountRequest)(nil),     // 20: song.GetViewsCountRequest
	(*GetViewsCountResponse)(nil),    // 21: song.GetViewsCountResponse
	(*IncreaseSongViewRequest)(nil),  // 22: song.IncreaseSongViewRequest
	(*IncreaseSongViewResponse)(nil), // 23: song.IncreaseSongViewResponse
	(*GetLikesCountRequest)(nil),     // 24: song.GetLikesCountRequest
	(*GetLikesCountResponse)(nil),    // 25: song.GetLikesCountResponse
	(*PaginatedSongData)(nil),        // 26: song.PaginatedSongData
	(*SongMetaData)(nil),             // 27: song.SongMetaData
	(*SongLink)(nil),                 // 28: song.SongLink
	(*timestamp.Timestamp)(nil),      // 29: google.protobuf.Timestamp
}
var file_song_proto_depIdxs = []int32{
	29, // 0: song.Artist.CreatedAt:type_name -> google.protobuf.Timestamp
	29, // 1: song.Artist.UpdatedAt:type_name -> google.protobuf.Timestamp
	0,  // 2: song.Song.Artist:type_name -> song.Artist
	29, // 3: song.Song.ReleasedAt:type_name -> google.protobuf.Timestamp
	29, // 4: song.Song.CreatedAt:type_name -> google.protobuf.Timestamp
	29, // 5: song.Song.UpdatedAt:type_name -> google.protobuf.Timestamp
	4,  // 6: song.CreateSongRequest.songInfo:type_name -> song.SongCreateInfo
	1,  // 7: song.GetSongResponse.song:type_name -> song.Song
	26, // 8: song.GetSongsResponse.songs:type_name -> song.PaginatedSongData
	1,  // 9: song.UpdateSongRequest.song:type_name -> song.Song
	27, // 10: song.PaginatedSongData.MetaData:type_name -> song.SongMetaData
	1,  // 11: song.PaginatedSongData.Data:type_name -> song.Song
	28, // 12: song.SongMetaData.Links:type_name -> song.SongLink
	5,  // 13: song.SongService.CreateSong:input_type -> song.CreateSongRequest
	7,  // 14: song.SongService.UpdateSongUrl:input_type -> song.UpdateSongUrlRequest
	9,  // 15: song.SongService.GetSong:input_type -> song.GetSongRequest
	11, // 16: song.SongService.GetAllSongs:input_type -> song.GetSongsRequest
	17, // 17: song.SongService.GetArtistSongs:input_type -> song.GetArtistSongsRequest
	13, // 18: song.SongService.UpdateSong:input_type -> song.UpdateSongRequest
	15, // 19: song.SongService.DeleteSong:input_type -> song.DeleteSongRequest
	18, // 20: song.SongService.LikeSong:input_type -> song.LikeSongRequest
	24, // 21: song.SongService.GetSongLikesCount:input_type -> song.GetLikesCountRequest
	20, // 22: song.SongService.GetSongViewCount:input_type -> song.GetViewsCountRequest
	22, // 23: song.SongService.IncreaseSongViewCount:input_type -> song.IncreaseSongViewRequest
	2,  // 24: song.SongService.DownloadFile:input_type -> song.DownloadFileRequest
	6,  // 25: song.SongService.CreateSong:output_type -> song.CreateSongResponse
	8,  // 26: song.SongService.UpdateSongUrl:output_type -> song.UpdateSongUrlResponse
	10, // 27: song.SongService.GetSong:output_type -> song.GetSongResponse
	12, // 28: song.SongService.GetAllSongs:output_type -> song.GetSongsResponse
	12, // 29: song.SongService.GetArtistSongs:output_type -> song.GetSongsResponse
	14, // 30: song.SongService.UpdateSong:output_type -> song.UpdateSongResponse
	16, // 31: song.SongService.DeleteSong:output_type -> song.DeleteSongResponse
	19, // 32: song.SongService.LikeSong:output_type -> song.LikeSongResponse
	25, // 33: song.SongService.GetSongLikesCount:output_type -> song.GetLikesCountResponse
	21, // 34: song.SongService.GetSongViewCount:output_type -> song.GetViewsCountResponse
	23, // 35: song.SongService.IncreaseSongViewCount:output_type -> song.IncreaseSongViewResponse
	3,  // 36: song.SongService.DownloadFile:output_type -> song.DownloadFileResponse
	25, // [25:37] is the sub-list for method output_type
	13, // [13:25] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_song_proto_init() }
func file_song_proto_init() {
	if File_song_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_song_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Artist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Song); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SongCreateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSongUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSongUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSongsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtistSongsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeSongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetViewsCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetViewsCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncreaseSongViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncreaseSongViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikesCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikesCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginatedSongData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SongMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_song_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SongLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_song_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*CreateSongRequest_SongInfo)(nil),
		(*CreateSongRequest_SongCover_ImageChunkData)(nil),
	}
	file_song_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*UpdateSongUrlRequest_SongId)(nil),
		(*UpdateSongUrlRequest_SongChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_song_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_song_proto_goTypes,
		DependencyIndexes: file_song_proto_depIdxs,
		MessageInfos:      file_song_proto_msgTypes,
	}.Build()
	File_song_proto = out.File
	file_song_proto_rawDesc = nil
	file_song_proto_goTypes = nil
	file_song_proto_depIdxs = nil
}
